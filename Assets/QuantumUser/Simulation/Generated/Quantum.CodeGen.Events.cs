// <auto-generated>
// This code was auto-generated by a tool, every time
// the tool executes this code will be reset.
//
// If you need to extend the classes generated to add
// fields or methods to them, please create partial
// declarations in another file.
// </auto-generated>
#pragma warning disable 0109
#pragma warning disable 1591


namespace Quantum {
  using Photon.Deterministic;
  using Quantum;
  using Quantum.Core;
  using Quantum.Collections;
  using Quantum.Inspector;
  using Quantum.Physics2D;
  using Quantum.Physics3D;
  using Byte = System.Byte;
  using SByte = System.SByte;
  using Int16 = System.Int16;
  using UInt16 = System.UInt16;
  using Int32 = System.Int32;
  using UInt32 = System.UInt32;
  using Int64 = System.Int64;
  using UInt64 = System.UInt64;
  using Boolean = System.Boolean;
  using String = System.String;
  using Object = System.Object;
  using FlagsAttribute = System.FlagsAttribute;
  using SerializableAttribute = System.SerializableAttribute;
  using MethodImplAttribute = System.Runtime.CompilerServices.MethodImplAttribute;
  using MethodImplOptions = System.Runtime.CompilerServices.MethodImplOptions;
  using FieldOffsetAttribute = System.Runtime.InteropServices.FieldOffsetAttribute;
  using StructLayoutAttribute = System.Runtime.InteropServices.StructLayoutAttribute;
  using LayoutKind = System.Runtime.InteropServices.LayoutKind;
  #if QUANTUM_UNITY //;
  using TooltipAttribute = UnityEngine.TooltipAttribute;
  using HeaderAttribute = UnityEngine.HeaderAttribute;
  using SpaceAttribute = UnityEngine.SpaceAttribute;
  using RangeAttribute = UnityEngine.RangeAttribute;
  using HideInInspectorAttribute = UnityEngine.HideInInspector;
  using PreserveAttribute = UnityEngine.Scripting.PreserveAttribute;
  using FormerlySerializedAsAttribute = UnityEngine.Serialization.FormerlySerializedAsAttribute;
  using MovedFromAttribute = UnityEngine.Scripting.APIUpdating.MovedFromAttribute;
  using CreateAssetMenu = UnityEngine.CreateAssetMenuAttribute;
  using RuntimeInitializeOnLoadMethodAttribute = UnityEngine.RuntimeInitializeOnLoadMethodAttribute;
  #endif //;
  
  public unsafe partial class Frame {
    public unsafe partial struct FrameEvents {
      static partial void GetEventTypeCountCodeGen(ref Int32 eventCount) {
        eventCount = 13;
      }
      static partial void GetParentEventIDCodeGen(Int32 eventID, ref Int32 parentEventID) {
        switch (eventID) {
          default: break;
        }
      }
      static partial void GetEventTypeCodeGen(Int32 eventID, ref System.Type result) {
        switch (eventID) {
          case EventOnHitSound.ID: result = typeof(EventOnHitSound); return;
          case EventOnGuardSound.ID: result = typeof(EventOnGuardSound); return;
          case EventOnCounterSound.ID: result = typeof(EventOnCounterSound); return;
          case EventOnAttackSound.ID: result = typeof(EventOnAttackSound); return;
          case EventOnParringSound.ID: result = typeof(EventOnParringSound); return;
          case EventOnHitEffect.ID: result = typeof(EventOnHitEffect); return;
          case EventOnGuardEffect.ID: result = typeof(EventOnGuardEffect); return;
          case EventOnParringEffect.ID: result = typeof(EventOnParringEffect); return;
          case EventOnCounterEffect.ID: result = typeof(EventOnCounterEffect); return;
          case EventRoundVoice.ID: result = typeof(EventRoundVoice); return;
          case EventFightVoice.ID: result = typeof(EventFightVoice); return;
          case EventOnPlayerHitEvent.ID: result = typeof(EventOnPlayerHitEvent); return;
          default: break;
        }
      }
      public EventOnHitSound OnHitSound() {
        var ev = _f.Context.AcquireEvent<EventOnHitSound>(EventOnHitSound.ID);
        _f.AddEvent(ev);
        return ev;
      }
      public EventOnGuardSound OnGuardSound() {
        var ev = _f.Context.AcquireEvent<EventOnGuardSound>(EventOnGuardSound.ID);
        _f.AddEvent(ev);
        return ev;
      }
      public EventOnCounterSound OnCounterSound() {
        var ev = _f.Context.AcquireEvent<EventOnCounterSound>(EventOnCounterSound.ID);
        _f.AddEvent(ev);
        return ev;
      }
      public EventOnAttackSound OnAttackSound() {
        var ev = _f.Context.AcquireEvent<EventOnAttackSound>(EventOnAttackSound.ID);
        _f.AddEvent(ev);
        return ev;
      }
      public EventOnParringSound OnParringSound() {
        var ev = _f.Context.AcquireEvent<EventOnParringSound>(EventOnParringSound.ID);
        _f.AddEvent(ev);
        return ev;
      }
      public EventOnHitEffect OnHitEffect(FPVector2 position) {
        var ev = _f.Context.AcquireEvent<EventOnHitEffect>(EventOnHitEffect.ID);
        ev.position = position;
        _f.AddEvent(ev);
        return ev;
      }
      public EventOnGuardEffect OnGuardEffect(FPVector2 position) {
        var ev = _f.Context.AcquireEvent<EventOnGuardEffect>(EventOnGuardEffect.ID);
        ev.position = position;
        _f.AddEvent(ev);
        return ev;
      }
      public EventOnParringEffect OnParringEffect(FPVector2 position) {
        var ev = _f.Context.AcquireEvent<EventOnParringEffect>(EventOnParringEffect.ID);
        ev.position = position;
        _f.AddEvent(ev);
        return ev;
      }
      public EventOnCounterEffect OnCounterEffect(FPVector2 position) {
        var ev = _f.Context.AcquireEvent<EventOnCounterEffect>(EventOnCounterEffect.ID);
        ev.position = position;
        _f.AddEvent(ev);
        return ev;
      }
      public EventRoundVoice RoundVoice() {
        var ev = _f.Context.AcquireEvent<EventRoundVoice>(EventRoundVoice.ID);
        _f.AddEvent(ev);
        return ev;
      }
      public EventFightVoice FightVoice() {
        var ev = _f.Context.AcquireEvent<EventFightVoice>(EventFightVoice.ID);
        _f.AddEvent(ev);
        return ev;
      }
      public EventOnPlayerHitEvent OnPlayerHitEvent(Int32 Foo) {
        var ev = _f.Context.AcquireEvent<EventOnPlayerHitEvent>(EventOnPlayerHitEvent.ID);
        ev.Foo = Foo;
        _f.AddEvent(ev);
        return ev;
      }
    }
  }
  public unsafe partial class EventOnHitSound : EventBase {
    public new const Int32 ID = 1;
    protected EventOnHitSound(Int32 id, EventFlags flags) : 
        base(id, flags) {
    }
    public EventOnHitSound() : 
        base(1, EventFlags.Server|EventFlags.Client) {
    }
    public new QuantumGame Game {
      get {
        return (QuantumGame)base.Game;
      }
      set {
        base.Game = value;
      }
    }
    public override Int32 GetHashCode() {
      unchecked {
        var hash = 41;
        return hash;
      }
    }
  }
  public unsafe partial class EventOnGuardSound : EventBase {
    public new const Int32 ID = 2;
    protected EventOnGuardSound(Int32 id, EventFlags flags) : 
        base(id, flags) {
    }
    public EventOnGuardSound() : 
        base(2, EventFlags.Server|EventFlags.Client) {
    }
    public new QuantumGame Game {
      get {
        return (QuantumGame)base.Game;
      }
      set {
        base.Game = value;
      }
    }
    public override Int32 GetHashCode() {
      unchecked {
        var hash = 43;
        return hash;
      }
    }
  }
  public unsafe partial class EventOnCounterSound : EventBase {
    public new const Int32 ID = 3;
    protected EventOnCounterSound(Int32 id, EventFlags flags) : 
        base(id, flags) {
    }
    public EventOnCounterSound() : 
        base(3, EventFlags.Server|EventFlags.Client) {
    }
    public new QuantumGame Game {
      get {
        return (QuantumGame)base.Game;
      }
      set {
        base.Game = value;
      }
    }
    public override Int32 GetHashCode() {
      unchecked {
        var hash = 47;
        return hash;
      }
    }
  }
  public unsafe partial class EventOnAttackSound : EventBase {
    public new const Int32 ID = 4;
    protected EventOnAttackSound(Int32 id, EventFlags flags) : 
        base(id, flags) {
    }
    public EventOnAttackSound() : 
        base(4, EventFlags.Server|EventFlags.Client) {
    }
    public new QuantumGame Game {
      get {
        return (QuantumGame)base.Game;
      }
      set {
        base.Game = value;
      }
    }
    public override Int32 GetHashCode() {
      unchecked {
        var hash = 53;
        return hash;
      }
    }
  }
  public unsafe partial class EventOnParringSound : EventBase {
    public new const Int32 ID = 5;
    protected EventOnParringSound(Int32 id, EventFlags flags) : 
        base(id, flags) {
    }
    public EventOnParringSound() : 
        base(5, EventFlags.Server|EventFlags.Client) {
    }
    public new QuantumGame Game {
      get {
        return (QuantumGame)base.Game;
      }
      set {
        base.Game = value;
      }
    }
    public override Int32 GetHashCode() {
      unchecked {
        var hash = 59;
        return hash;
      }
    }
  }
  public unsafe partial class EventOnHitEffect : EventBase {
    public new const Int32 ID = 6;
    public FPVector2 position;
    protected EventOnHitEffect(Int32 id, EventFlags flags) : 
        base(id, flags) {
    }
    public EventOnHitEffect() : 
        base(6, EventFlags.Server|EventFlags.Client) {
    }
    public new QuantumGame Game {
      get {
        return (QuantumGame)base.Game;
      }
      set {
        base.Game = value;
      }
    }
    public override Int32 GetHashCode() {
      unchecked {
        var hash = 61;
        hash = hash * 31 + position.GetHashCode();
        return hash;
      }
    }
  }
  public unsafe partial class EventOnGuardEffect : EventBase {
    public new const Int32 ID = 7;
    public FPVector2 position;
    protected EventOnGuardEffect(Int32 id, EventFlags flags) : 
        base(id, flags) {
    }
    public EventOnGuardEffect() : 
        base(7, EventFlags.Server|EventFlags.Client) {
    }
    public new QuantumGame Game {
      get {
        return (QuantumGame)base.Game;
      }
      set {
        base.Game = value;
      }
    }
    public override Int32 GetHashCode() {
      unchecked {
        var hash = 67;
        hash = hash * 31 + position.GetHashCode();
        return hash;
      }
    }
  }
  public unsafe partial class EventOnParringEffect : EventBase {
    public new const Int32 ID = 8;
    public FPVector2 position;
    protected EventOnParringEffect(Int32 id, EventFlags flags) : 
        base(id, flags) {
    }
    public EventOnParringEffect() : 
        base(8, EventFlags.Server|EventFlags.Client) {
    }
    public new QuantumGame Game {
      get {
        return (QuantumGame)base.Game;
      }
      set {
        base.Game = value;
      }
    }
    public override Int32 GetHashCode() {
      unchecked {
        var hash = 71;
        hash = hash * 31 + position.GetHashCode();
        return hash;
      }
    }
  }
  public unsafe partial class EventOnCounterEffect : EventBase {
    public new const Int32 ID = 9;
    public FPVector2 position;
    protected EventOnCounterEffect(Int32 id, EventFlags flags) : 
        base(id, flags) {
    }
    public EventOnCounterEffect() : 
        base(9, EventFlags.Server|EventFlags.Client) {
    }
    public new QuantumGame Game {
      get {
        return (QuantumGame)base.Game;
      }
      set {
        base.Game = value;
      }
    }
    public override Int32 GetHashCode() {
      unchecked {
        var hash = 73;
        hash = hash * 31 + position.GetHashCode();
        return hash;
      }
    }
  }
  public unsafe partial class EventRoundVoice : EventBase {
    public new const Int32 ID = 10;
    protected EventRoundVoice(Int32 id, EventFlags flags) : 
        base(id, flags) {
    }
    public EventRoundVoice() : 
        base(10, EventFlags.Server|EventFlags.Client) {
    }
    public new QuantumGame Game {
      get {
        return (QuantumGame)base.Game;
      }
      set {
        base.Game = value;
      }
    }
    public override Int32 GetHashCode() {
      unchecked {
        var hash = 79;
        return hash;
      }
    }
  }
  public unsafe partial class EventFightVoice : EventBase {
    public new const Int32 ID = 11;
    protected EventFightVoice(Int32 id, EventFlags flags) : 
        base(id, flags) {
    }
    public EventFightVoice() : 
        base(11, EventFlags.Server|EventFlags.Client) {
    }
    public new QuantumGame Game {
      get {
        return (QuantumGame)base.Game;
      }
      set {
        base.Game = value;
      }
    }
    public override Int32 GetHashCode() {
      unchecked {
        var hash = 83;
        return hash;
      }
    }
  }
  public unsafe partial class EventOnPlayerHitEvent : EventBase {
    public new const Int32 ID = 12;
    public Int32 Foo;
    protected EventOnPlayerHitEvent(Int32 id, EventFlags flags) : 
        base(id, flags) {
    }
    public EventOnPlayerHitEvent() : 
        base(12, EventFlags.Server|EventFlags.Client) {
    }
    public new QuantumGame Game {
      get {
        return (QuantumGame)base.Game;
      }
      set {
        base.Game = value;
      }
    }
    public override Int32 GetHashCode() {
      unchecked {
        var hash = 89;
        hash = hash * 31 + Foo.GetHashCode();
        return hash;
      }
    }
  }
}
#pragma warning restore 0109
#pragma warning restore 1591
