// <auto-generated>
// This code was auto-generated by a tool, every time
// the tool executes this code will be reset.
//
// If you need to extend the classes generated to add
// fields or methods to them, please create partial
// declarations in another file.
// </auto-generated>
#pragma warning disable 0109
#pragma warning disable 1591


namespace Quantum.Prototypes.Unity {
  using Photon.Deterministic;
  using Quantum;
  using Quantum.Core;
  using Quantum.Collections;
  using Quantum.Inspector;
  using Quantum.Physics2D;
  using Quantum.Physics3D;
  using Byte = System.Byte;
  using SByte = System.SByte;
  using Int16 = System.Int16;
  using UInt16 = System.UInt16;
  using Int32 = System.Int32;
  using UInt32 = System.UInt32;
  using Int64 = System.Int64;
  using UInt64 = System.UInt64;
  using Boolean = System.Boolean;
  using String = System.String;
  using Object = System.Object;
  using FlagsAttribute = System.FlagsAttribute;
  using SerializableAttribute = System.SerializableAttribute;
  using MethodImplAttribute = System.Runtime.CompilerServices.MethodImplAttribute;
  using MethodImplOptions = System.Runtime.CompilerServices.MethodImplOptions;
  using FieldOffsetAttribute = System.Runtime.InteropServices.FieldOffsetAttribute;
  using StructLayoutAttribute = System.Runtime.InteropServices.StructLayoutAttribute;
  using LayoutKind = System.Runtime.InteropServices.LayoutKind;
  #if QUANTUM_UNITY //;
  using TooltipAttribute = UnityEngine.TooltipAttribute;
  using HeaderAttribute = UnityEngine.HeaderAttribute;
  using SpaceAttribute = UnityEngine.SpaceAttribute;
  using RangeAttribute = UnityEngine.RangeAttribute;
  using HideInInspectorAttribute = UnityEngine.HideInInspector;
  using PreserveAttribute = UnityEngine.Scripting.PreserveAttribute;
  using FormerlySerializedAsAttribute = UnityEngine.Serialization.FormerlySerializedAsAttribute;
  using MovedFromAttribute = UnityEngine.Scripting.APIUpdating.MovedFromAttribute;
  using CreateAssetMenu = UnityEngine.CreateAssetMenuAttribute;
  using RuntimeInitializeOnLoadMethodAttribute = UnityEngine.RuntimeInitializeOnLoadMethodAttribute;
  #endif //;
  
  [System.SerializableAttribute()]
  public unsafe partial class AnimatorComponentPrototype : Quantum.QuantumUnityPrototypeAdapter<Quantum.Prototypes.AnimatorComponentPrototype> {
    [HideInInspector()]
    public Quantum.QuantumEntityPrototype Self;
    public AssetRef<AnimatorGraph> AnimatorGraph;
    [HideInInspector()]
    [DynamicCollectionAttribute()]
    public Quantum.Prototypes.LayerDataPrototype[] Layers = {};
    [HideInInspector()]
    [DynamicCollectionAttribute()]
    public Quantum.Prototypes.AnimatorRuntimeVariablePrototype[] AnimatorVariables = {};
    partial void ConvertUser(Quantum.QuantumEntityPrototypeConverter converter, ref Quantum.Prototypes.AnimatorComponentPrototype prototype);
    public override Quantum.Prototypes.AnimatorComponentPrototype Convert(Quantum.QuantumEntityPrototypeConverter converter) {
      var result = new Quantum.Prototypes.AnimatorComponentPrototype();
      converter.Convert(this.Self, out result.Self);
      converter.Convert(this.AnimatorGraph, out result.AnimatorGraph);
      converter.Convert(this.Layers, out result.Layers);
      converter.Convert(this.AnimatorVariables, out result.AnimatorVariables);
      ConvertUser(converter, ref result);
      return result;
    }
  }
  [System.SerializableAttribute()]
  public unsafe partial class LSDF_HitboxInfoPrototype : Quantum.QuantumUnityPrototypeAdapter<Quantum.Prototypes.LSDF_HitboxInfoPrototype> {
    public Quantum.QuantumEntityPrototype AttackerEntity;
    public Quantum.QEnum32<HitboxAttackType> AttackType;
    public Quantum.QEnum32<CountAttackType> CountType;
    public Quantum.QEnum32<DelayGuardType> DelayGuardTpye;
    public Quantum.QEnum32<HomingType> HomingReturnType;
    public Quantum.QEnum32<GuaranteeType> GuaranteeAttackType;
    public Int32 startFrame;
    public Int32 attackDamage;
    public Int32 enemyGuardTime;
    public Int32 enemyHitTime;
    public Int32 enemyCountTime;
    public FP forceBack;
    public QBoolean launcher;
    public QBoolean dodgeHigh;
    public QBoolean jumpAttack;
    public QBoolean notSitLauncher;
    public QBoolean wallLauncher;
    partial void ConvertUser(Quantum.QuantumEntityPrototypeConverter converter, ref Quantum.Prototypes.LSDF_HitboxInfoPrototype prototype);
    public override Quantum.Prototypes.LSDF_HitboxInfoPrototype Convert(Quantum.QuantumEntityPrototypeConverter converter) {
      var result = new Quantum.Prototypes.LSDF_HitboxInfoPrototype();
      converter.Convert(this.AttackerEntity, out result.AttackerEntity);
      converter.Convert(this.AttackType, out result.AttackType);
      converter.Convert(this.CountType, out result.CountType);
      converter.Convert(this.DelayGuardTpye, out result.DelayGuardTpye);
      converter.Convert(this.HomingReturnType, out result.HomingReturnType);
      converter.Convert(this.GuaranteeAttackType, out result.GuaranteeAttackType);
      converter.Convert(this.startFrame, out result.startFrame);
      converter.Convert(this.attackDamage, out result.attackDamage);
      converter.Convert(this.enemyGuardTime, out result.enemyGuardTime);
      converter.Convert(this.enemyHitTime, out result.enemyHitTime);
      converter.Convert(this.enemyCountTime, out result.enemyCountTime);
      converter.Convert(this.forceBack, out result.forceBack);
      converter.Convert(this.launcher, out result.launcher);
      converter.Convert(this.dodgeHigh, out result.dodgeHigh);
      converter.Convert(this.jumpAttack, out result.jumpAttack);
      converter.Convert(this.notSitLauncher, out result.notSitLauncher);
      converter.Convert(this.wallLauncher, out result.wallLauncher);
      ConvertUser(converter, ref result);
      return result;
    }
  }
}
#pragma warning restore 0109
#pragma warning restore 1591
